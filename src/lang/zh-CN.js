'use strict'

exports.__esModule = true
exports.default = {
  global: {
    add: '添加',
    create: '新建',
    update: '更新',
    copy: '复制',
    edit: '编辑',
    configure: '配置',
    delete: '删除',
    validate: '校验',
    confirm: '确定',
    cancel: '取消',
    save: '保存',
    refresh: '刷新',
    creator: '创建人',
    canceller: '取消者',
    operation: '操作',
    successfullySaved: '保存成功',
    helpDoc: '帮助文档',
    document: '文档',
    enterprisefeaturesReferforDetails: '企业版功能，详情参考',
    enterpriseWorkflowReferforDetails: '企业版支持自定义、发布工作流模板库，详情参考',
    help: '帮助',
    desc: '描述',
    type: '类型',
    var: '变量',
    status: '状态',
    name: '名称',
    tips: '提示',
    serviceName: '服务名称',
    serviceType: '服务类型',
    realTimeLog: '实时日志',
    inputDesc: '请输入描述信息',
    loading: '加载中...',
    project: '项目',
    workflow: '工作流',
    build: '构建',
    workflowName: '工作流名称',
    workflowID: '工作流标识',
    number: '序号',
    whetherToDisplay: '是否显示',
    addConfig: '添加配置',
    pleaseInput: '请输入',
    pleaseSelect: '请选择',
    timeout: '超时时间',
    all: '所有',
    key: '键',
    value: '值',
    descInfo: '描述信息',
    fileDirectory: '文件目录',
    testName: '测试名称',
    repository: '代码库',
    gitMessage: '代码信息',
    errorMsg: '错误信息',
    ok: '知道了',
    startTime: '开始时间',
    endTime: '结束时间',
    execute: '执行',
    confirmation: '确认',
    inputName: '请输入名称',
    inputKey: '键 不能为空',
    inputValue: '值 不能为空',
    keyIsDuplicated: '键值重复，请检查',
    code: '代码',
    host: '主机',
    string: '字符串',
    enumeration: '枚举',
    boolean: '布尔值',
    multilineText: '多行文本',
    emptyText: '无',
    setting: '设置',
    importFromRepository: '从代码库导入',
    view: '查看',
    clear: '清空',
    search: '搜索',
    serviceEntrypoint: '服务入口',
    detail: '详情',
    sync: '同步',
    autoSync: '自动同步',
    import: '导入',
    bulkImport: '批量导入',
    reset: '重置',
    apply: '应用',
    skip: '跳过',
    preview: '预览',
    back: '返回',
    remove: '移除',
    download: '下载',
    basicInfo: '基本信息',
    retry: '重试',
    expand: '展开',
    collapse: '收起',
    defaultValue: '默认值',
    serviceModule: '服务组件',
    templates: '模板库',
    updateTime: '更新时间',
    lastModified: '最后修改',
    autoCancel: '自动取消',
    creationTime: '创建时间',
    port: '端口',
    capacity: '容量',
    continue: '继续',
    serviceImage: '服务镜像',
    serviceVar: '服务变量',
    serviceConfiguration: '服务配置',
    noChange: '无变更',
    hasChange: '有变更',
    originValue: '原值',
    imageVersion: '镜像版本',
    keyValuePairs: '键值对',
    yamlFile: 'YAML 文件',
    passwordStrengthTip: '密码需要包含大写字母，小写字母以及数字，长度至少为 8 位',
    previewChanges: '预览变更',
    selectAll: '全选',
    filter: '过滤',
    info: '信息',
    reason: '原因',
    valuesFile: 'Values 文件',
    releaseName: 'Release 名称',
    chartName: 'Chart 名称'
  },
  metaTitle: {
    projectDetail: '项目详情',
    workflowDetail: '工作流详情',
    taskDetail: '任务详情',
    testDetail: '测试详情',
    buildDetail: '构建详情',
    testTaskDetail: '测试任务详情',
    scanningTaskDetail: '扫描任务详情',
    envDetail: '环境详情',
    serviceDetail: '服务详情',
    createProject: '新建项目',
    createBuild: '新建构建',
    createWorkflow: '新建工作流',
    editWorkflow: '编辑工作流',
    testReport: '测试报告',
    taskList: '任务列表',
    createScanning: '新建扫描',
    editScanning: '编辑扫描',
    createVersion: '创建版本',
    versionDetail: '版本详情',
    addTest: '新建测试',
    serviceConfiguration: '服务配置',
    envConfiguration: '环境配置',
    chartTemplates: 'Chart 模板库',
    dockerfileTemplates: 'Dockerfile 模板库',
    k8sTemplates: 'Kubernetes YAML 模板库',
    buildTemplates: '构建模板库',
    workflowTemplates: '工作流模板库',
    editWorkflowTemplate: '编辑工作流模板'
  },
  permission: {
    lackPermission: '无权限操作'
  },
  login: {
    username: '用户名',
    password: '密码',
    captcha: '验证码',
    mail: '邮箱',
    inputUsername: '请输入用户名',
    inputPass: '请输入密码',
    inputCaptcha: '请输入验证码',
    inputMail: '请输入邮箱',
    inputMailCheck: '请检查邮箱格式',
    inputUserInfo: '请输入新用户信息',
    inputNewPass: '请输入新密码',
    inputNewPassAgain: '请再次输入密码',
    passwordDontMatch: '两次输入密码不一致!',
    passwordLength: '新密码应不小于 8 位字符',
    signIn: '登录',
    signUp: '注册',
    forgotPassword: '找回密码',
    resetPassword: '找回密码',
    resetSuccess: '重置成功',
    confirmReset: '重置密码',
    next: '下一步',
    resetLinkTip: '密码重置链接已经发送至你的注册邮箱',
    setNewPassword: '设置新密码',
    sloganTitle: 'Zadig，让工程师更加专注创造～',
    sloganDesc: '工程师热爱的云原生持续交付平台：具备灵活易用的高并发工作流、面向开发者的云原生环境、高效协同的测试管理、强大免运维的模板库、客观精确的效能洞察以及云原生 IDE 插件等重要特性，为工程师提供统一的协作平面。',
    companyInfo: '筑栈（上海）信息技术有限公司 KodeRover'
  },
  signUp: {
    username: '用户名',
    password: '密码',
    mail: '邮箱',
    nickname: '昵称',
    inputUsername: '请输入用户名',
    inputPass: '请输入密码',
    inputNickname: '请输入昵称',
    inputMail: '请输入邮箱',
    inputMailCheck: '请检查邮箱格式',
    inputUserInfo: '请输入新用户信息',
    signUp: '注册',
    signUpSuccess: '用户注册成功，请登录'
  },
  installation: {
    signup: '管理员注册',
    company: '企业名称',
    inputCompany: '请输入企业名称',
    username: '用户名',
    inputUsername: '请输入用户名',
    password: '密码',
    inputPassword: '请输入密码',
    email: '邮箱',
    inputEmail: '请输入邮箱',
    inputEmailCheck: '请检查邮箱格式',
    phone: '手机号',
    inputPhone: '请输入手机号',
    checkPhone: '请检查手机号格式',
    reason: '使用 Zadig 原因',
    inputReasonPlaceholder: '请输入使用 Zadig 原因，有机会获取 Zadig 最新周边',
    address: '收件地址',
    inputAddressPlaceholder: '请输入收件地址'
  },
  sidebarMenu: {
    productDelivery: '产品交付',
    status: '运行状态',
    personalView: '个人视图',
    dashboard: '仪表盘',
    projects: '项目',
    forum: '论坛',
    testCenter: '测试中心',
    deliveryCenter: '交付中心',
    dataViews: '数据视图',
    dataOverview: '数据概览',
    dataInsight: '效能洞察',
    setting: '设置',
    sysSetting: '系统设置',
    integration: '集成管理',
    systemIntegration: '系统集成',
    packages: '软件包管理',
    images: '自定义镜像管理',
    plugins: '工作流任务',
    system: '系统',
    settings: '系统配置',
    users: '用户管理',
    announcement: '公告管理',
    auditLog: '操作日志',
    profile: '账号设置',
    preference: '偏好设置',
    enterprise: '企业管理',
    enterpriseInfo: '企业信息',
    license: '许可证',
    releaseCenter: '发布中心',
    releaseWorkflows: '工作流',
    environmentGroups: '环境组',
    customerDelivery: '客户交付',
    deliveryBoard: '交付看板',
    deliveryVersion: '版本',
    deliveryCustomers: '客户'
  },
  topbarMenu: {
    search: '搜索',
    username: '用户名',
    admin: '管理员',
    user: '普通用户',
    users: '用户管理',
    sysSetting: '系统设置',
    enterprise: '企业管理',
    profile: '账号设置',
    signOut: '登出'
  },
  subTopbarMenu: {
    projects: '项目',
    workflows: '工作流',
    environments: '环境',
    templates: '模板库',
    services: '服务',
    testServices: '测试服务',
    productionServices: '生产服务',
    builds: '构建',
    tests: '测试',
    scannings: '代码扫描',
    versions: '版本管理',
    buildTemplates: '构建模板',
    createWorkflow: '新建工作流',
    createEnvironment: '新建环境',
    testEnvironment: '测试环境',
    productionEnvironment: '生产环境',
    createBuild: '新建构建',
    createTest: '新建测试',
    createScanner: '新建代码扫描',
    createVersion: '创建版本',
    changeProjectType: '切换项目类型',
    projectConfig: '配置',
    editProject: '修改',
    hostManagement: '主机管理',
    projectPermission: '权限',
    projectCollaborationMode: '协作模式',
    varsGroup: '变量组',
    changeProjectTypeFirstTip: '从「托管项目」切换为「K8s YAML 项目」，项目内资源确认',
    changeProjectTypeSecondTip: '1. 现有项目资源不会变化，将新增服务管理能力',
    changeProjectTypeThirdTip: '2. 托管项目中的所有服务将被纳入到服务管理，环境中关联的 workload 将作为服务配置',
    changeProjectTypeFourthTip: '3. 切换操作不可逆，请谨慎操作',
    changeProjectTypeConfirm: '确认切换项目类型？',
    changeProjectTypeSuccess: '切换项目类型成功!',
    cancelChangeProjectType: '取消切换项目类型'
  },
  profile: {
    profile: '账号设置',
    changePassword: '修改密码',
    oldPassword: '旧密码',
    newPassword: '新密码',
    confirmNewPassword: '确认新密码',
    changeMail: '修改邮箱',
    oldMail: '原邮箱',
    newMail: '新邮箱',
    inputMail: '请输入企业邮箱',
    pleaseCheckMail: '请输入正确的邮箱地址',
    changePhone: '修改手机号码',
    oldPhone: '原手机号码',
    newPhone: '新手机号码',
    inputPhone: '请填写手机号',
    pleaseCheckPhone: '请输入正确的手机号码',
    admin: '管理员',
    user: '普通用户',
    lastAccessedOn: '最近登录',
    source: '用户来源',
    system: '系统创建',
    updatePassword: '修改密码',
    updateMail: '修改邮箱',
    updatePhone: '修改手机号码',
    clickToChange: '点击修改',
    notificationSetting: '通知设置',
    workflowStatusChanged: '工作流状态变更',
    inputNewPass: '请输入新密码',
    inputOldPass: '请输入旧密码',
    inputNewPassAgain: '请再次输入新密码',
    passwordDontMatch: '两次输入密码不一致!',
    copiedToClipboard: '已成功复制到剪贴板',
    copyFailed: '复制失败',
    passwordChangedSuccessfully: '密码修改成功',
    mailChangedSuccessfully: '邮箱修改成功',
    phoneChangedSuccessfully: '手机号码修改成功',
    notificationSettingSavedSuccessfully: '通知设置保存成功',
    uiTheme: '界面颜色主题',
    logColor: '日志颜色',
    backgroundColor: '背景颜色',
    fontColor: '字体颜色',
    defaultTheme: '默认主题',
    darkTheme: '深色主题',
    inputColorHex: '请输入颜色值',
    checkColorHex: '请检查颜色值格式',
    preferenceChangedSuccessfully: '偏好设置保存成功'
  },
  status: {
    noRunningTask: '暂无正在运行的任务',
    productWorkflow: '产品工作流',
    workflow: '工作流',
    codeScanning: '代码扫描',
    viewTaskDetail: '查看任务流程',
    hideTaskDetail: '收起任务流程',
    deleteTask: '删除任务',
    build: '构建',
    unitTest: '单元测试',
    coverage: '覆盖率',
    branch: '分支',
    buildInfo: '构建信息',
    scriptBuilding: '脚本构建',
    imgInfo: '镜像信息',
    imgBuilding: '构建镜像',
    deploy: '部署',
    updateEnv: '环境更新',
    service: '服务',
    env: '环境',
    image: '镜像',
    test: '测试',
    testReport: '测试报告',
    distribute: '分发',
    distributeImage: '镜像分发',
    imageRepo: '镜像仓库',
    imageName: '镜像名称',
    queued: '队列中',
    success: '成功',
    cancelQueuedTaskSuccess: '队列任务取消成功',
    cancelRunningTaskSuccess: '运行任务取消成功',
    buildStatus: '构建状态',
    deployStatus: '部署状态'
  },
  project: {
    searchProject: '搜索项目',
    newProject: '新建项目',
    templates: '模板库',
    buildTemplate: '构建',
    workflowTemplate: '工作流',
    editProject: '修改',
    deleteProject: '删除',
    privateProject: '私有项目',
    workflows: '工作流',
    environments: '环境',
    tests: '测试',
    services: '服务',
    builds: '构建',
    codeScanning: '代码扫描',
    versions: '版本管理',
    artifacts: '交付物',
    clusters: '集群',
    noProjects: '暂无可展示的项目，请手动添加项目',
    allProjectsHaveBeenLoaded: '项目已全部加载完毕',
    projectName: '项目名称',
    environmentCounts: '环境数量',
    environmentsList: '环境信息',
    workflowsList: '工作流信息',
    workflowStage: '步骤',
    lastUpdated: '更新',
    clusterInfo: '归属',
    localCluster: '本地',
    updates: '最后修改时间',
    projectDetail: '配置',
    createProjectComp: {
      projectIdentifier: '项目标识',
      projectIdentifierTip: '项目标识是该项目资源的全局唯一标识符，用于该项目下所有资源的引用与更新，默认自动生成，同时支持手动指定，创建后不可更改',
      type: '项目类型',
      yamlProject: 'K8s YAML 项目',
      yamlPath: 'YAML 文件路径',
      yamlProjectFirstDesc: '基础设施使用 Kubernetes',
      yamlProjectSecondDesc: '使用 Kubernetes YAML 管理和部署服务',
      helmProject: 'K8s Helm Chart 项目',
      helmProjectFirstDesc: '基础设施使用 Kubernetes',
      helmProjectSecondDesc: '使用 Helm Chart 管理和部署服务',
      hostingProject: 'K8s 托管项目',
      hostingProjectFirstDesc: '托管现有 Kubernetes 集群中的资源',
      hostingProjectSecondDesc: '支持服务镜像的更新',
      hostsProject: '主机项目',
      hostsProjectFirstDesc: '基础设施使用主机',
      hostsProjectSecondDesc: '使用自定义脚本部署升级服务',
      compatibility: '支持的基础设施列表',
      advancedConfigurations: '高级配置',
      accessPermission: '访问权限',
      projectAdministrator: '项目管理员',
      private: '私有',
      privateDesc: '该项目对系统普通用户默认不可见，项目管理员可通过添加成员对特定用户添加相应权限。',
      public: '公开',
      publicDesc: '用户默认享有公开权限，可查看项目中的工作流、环境、服务、构建、测试等资源。',
      inputUsernameToSearch: '请输入用户名搜索用户',
      selectCluster: '选择项目使用的集群资源',
      specifiedCluster: '指定集群',
      confirmUpdate: '确认修改',
      createNow: '立即新建',
      inputProjectName: '请输入项目名称',
      selectProjectAdmin: '请选择项目管理员',
      selectProjectAccessPermission: '请选择项目权限',
      inputProjectIdentifier: '请填写项目标识',
      inputProjectIdentifierCheck: '项目标识只支持小写字母和数字，特殊字符只支持中划线',
      successfullySaved: '新建项目成功',
      successfullyUpdated: '更新项目成功',
      createProject: '新建项目',
      editProjectInfo: '修改项目信息'
    },
    deleteProjectComp: {
      inputProjectAliasToDelete: '请输入项目名称 {projectAlias} 确认删除',
      deleteExternalProjectTip: '该项目下的以下资源会被取消托管，',
      deleteProjectTip: '该项目下的以下资源会同时被删除，',
      deleteProjectCaution: '请谨慎操作！！',
      deleteK8sNamespace: '同时删除环境对应的 K8s 命名空间和服务',
      projectNameDontMatch: '项目名称不相符',
      successfullyDeleted: '项目删除成功'
    },
    onboardingComp: {
      projectOnboarding: '项目初始化向导',
      projectConfiguration: '项目配置',
      createService: '新建服务',
      joinToEnvironment: '加入环境',
      configureEnv: '配置环境',
      runWorkflow: '执行工作流',
      devEnv: '开发环境',
      testEnv: '测试环境',
      preReleaseEnv: '预发布环境',
      firstStep: '第一步',
      firstStepTip: '对项目的流程做初步定义后，后续可在项目中进行调整。当您创建好服务后，我们会为您做如下的智能交付准备。Zadig 会自动生成以下资源：',
      hostingFirstStepTip: '托管已有 K8s 集群资源，选择服务在 Zadig 中进行管理',
      envCountTip: '2 套测试环境',
      workflowCountTip: '3 条工作流',
      secondStep: '第二步',
      secondStepTip: '创建服务模板，后续均可在项目中重新配置',
      hostingSecondStepTip: '添加构建并配置相关脚本，后续可在工作流中自动更新服务',
      thirdStep: '第三步',
      thirdStepTip: '按需创建环境，后续可在项目中调整。',
      thirdStepEnterpriseDocument: '企业版支持现有服务配置快速导入，详情参考',
      hostingThirdStepTip: '运行工作流触发服务的自动化交付',
      cloudHostThirdStepTip: '将服务加入环境，并准备对应的交付工作流，后续均可在项目中进行配置',
      fourthStep: '第四步',
      fourthStepTip: '运行工作流触发服务的自动化交付',
      nextStep: '下一步',
      clickNextTip: '请点击下一步',
      finish: '完成',
      envName: '环境信息',
      updateTime: '更新信息',
      workflowStages: '包含步骤',
      clickToRun: '点击运行',
      skipOnboarding: '跳过向导',
      configureTheFollowingEnvironments: '配置以下几套环境：',
      configureEnvHosting: '配置环境托管',
      configureServiceBuild: '配置服务构建',
      environmentsPreparation: '环境准备',
      environmentDevPreparationTip: '开发环境：{projectName}-dev，开发日常自测、业务联调',
      environmentTestPreparationTip: '测试环境：{projectName}-qa，自动化测试、业务验收',
      environmentsPreparationTimeoutTip: '环境正在准备中，可点击 「下一步」 或者',
      toViewEnvironmentStatus: '查看环境状态',
      workflowsPreparation: '工作流准备',
      workflowDevPreparation: '开发工作流：{projectName}-workflow-dev，应用日常升级，用于开发自测和联调',
      workflowTestPreparation: '测试工作流：{projectName}-workflow-qa，应用按需升级，用于自动化测试和业务验收',
      workflowOpsPreparation: '运维工作流：{projectName}-ops-workflow，业务按需发布，用于版本升级和业务上线'
    },
    rbac: {
      membersManagement: '成员管理',
      membersManagementTip: '项目成员管理，主要用于定义项目成员的角色',
      addMember: '添加成员',
      projectMember: '项目成员',
      allUsers: '所有用户',
      username: '用户名称',
      inputUsernameToSearch: '请输入用户名称进行搜索',
      role: '角色',
      selectUser: '请选择用户',
      selectRole: '请选择角色',
      inputRoleName: '请填写角色名称',
      checkRoleName: '角色名称只支持小写字母和数字，特殊字符只支持中划线',
      policy: '策略',
      remove: '移除',
      removePolicyTooltip: '该用户关联项目协作模式，产生了相应的策略不能直接移除，请先将用户从对应协作模式中移除',
      removeReadOnlyTooltip: '所有用户具备 read-only 权限，可以通过项目配置 -> 设置访问权限为私有将其移除',
      confirmToDeleteMember: '确定要删除这个成员吗？',
      systemBuiltIn: '（系统内置）',
      identityTypeSystem: '系统创建',
      rolesManagement: '角色管理',
      rolesManagementTip: '项目角色管理，主要用于定义项目的角色',
      addRole: '添加角色',
      roleName: '角色名称',
      permissionList: '权限列表',
      selectAtLeastOnePermission: '请选择至少一个权限',
      roleType: '角色类型',
      publicRole: '公共角色',
      privateRole: '私有角色',
      inputRoleNameToSearch: '请输入角色名称进行搜索',
      deleteRoleTip: '此角色的成员权限也会被删除，请谨慎操作',
      confirmToDeleteRole: '确认删除此角色？',
      policyManagement: '策略管理',
      policyManagementTip: '用户与策略关联后，即可获得策略描述的权限',
      policyName: '策略名称',
      policyDesc: '描述信息',
      policyModifiedTime: '修改时间',
      permissionManagement: '权限管理'
    },
    varsGroup: {
      name: '变量组名称',
      inputVarsGroupName: '请输入变量组名称',
      inputVarsGroupYaml: '请输入 YAML 格式变量',
      confirmToDeleteVarsGroup: '确定要删除 {name}?',
      deleteVarsGroupSuccess: '变量组 {name} 删除成功！'
    }
  },
  templates: {
    k8sYaml: {
      noTemplate: '暂无模板，点击',
      createTemplate: '创建模板',
      createTemplateTooltip: '创建模板',
      selectTemplateToEdit: '请在左侧选择需要编辑的模板',
      inputTemplateName: '请输入模板名称',
      searchTemplate: '搜索模板',
      templateNameIsDuplicated: '模板名称与现有名称重复',
      confirm: '确认',
      confirmToDeleteTemplate: '确定要删除 {name} 这个模板吗？',
      successfullyDeleted: '删除成功',
      tip: '提示',
      confirmToSaveTemplate: '服务配置未保存，是否保存？',
      variablesList: '变量列表',
      referenceList: '引用列表',
      projectName: '项目',
      systemVariables: '系统内置变量',
      customVariables: '自定义变量',
      customVariablesTooltip: '自定义变量通过 {{.key}} 声明',
      noneVariable: '空',
      saveTemplateFirst: '请先保存模板',
      validationSuccess: '校验成功',
      successfullySaved: '变量保存成功',
      applyToServices: '应用到服务',
      successfullyUpdated: '更新模板 {fileName} 成功',
      successfullyCreated: '创建模板 {fileName} 成功',
      applyToServicesTooltip: '确认后，所有开启「自动同步」的服务配置会应用最新的模板。',
      confirmToApply: '确定应用到服务？',
      applyToServicesSuccessfully: '已成功应用到服务',
      yamlChangedTooltip: 'YAML 文件发生变更, 是否保存当前配置?'
    },
    helmChart: {
      chooseSource: '请选择导入源',
      createTemplate: '创建模板',
      templateName: '模板名称',
      inputTemplateName: '请输入模板名称',
      update: '更新',
      load: '加载',
      updateSuccess: '更新模板 {name} 成功',
      loadSuccess: '导入模板 {name} 成功',
      confirm: '确认',
      confirmToDeleteTemplate: '确定要删除 {name} 这个模板吗？',
      successfullyDeleted: '模板删除成功',
      cancelDeletingTemplate: '取消删除模板',
      variablesList: '变量列表',
      referenceList: '引用列表',
      systemVariables: '系统内置变量',
      customVariables: '自定义变量',
      customVariablesTooltip: '自定义变量通过 {{.key}} 声明',
      noneVariable: '空',
      applyToServices: '应用到服务',
      emptyService: '未选择服务',
      saveCustomVariablesSuccess: '自定义变量保存成功！',
      saveCustomVariablesFailed: '自定义变量保存失败：{message}',
      applyToServicesTooltip: '确认后，所有开启「自动同步」的服务配置会应用最新的模板。',
      confirmToApply: '确定应用到服务？',
      applyToServicesSuccessfully: '已成功应用到服务'
    },
    dockerfile: {
      noTemplate: '暂无模板，点击',
      createTemplate: '创建模板',
      createTemplateTooltip: '创建模板',
      inputTemplateName: '请输入模板名称',
      templateNameIsDuplicated: '模板名称与现有名称重复',
      selectTemplateToEdit: '请在左侧选择需要编辑的模板',
      searchTemplate: '搜索模板',
      variablesList: '变量',
      referenceList: '引用列表',
      noneVariable: '空',
      templateUpdated: '模板 {name} 更新成功',
      templateCreated: '模板 {name} 创建成功',
      templateDeleted: '删除成功',
      deleteConfirmation: '确定要删除 {name} 这个模板吗？',
      confirmToSaveTemplate: 'Dockerfile 模板未保存，是否保存？',
      deleteChange: '放弃'
    },
    build: {
      noTemplate: '暂无模板，点击',
      createTemplate: '创建模板',
      createTemplateTooltip: '创建模板',
      inputTemplateName: '请输入模板名称',
      templateNameIsDuplicated: '模板名称与现有名称重复',
      selectTemplateToEdit: '请在左侧选择需要编辑的模板',
      searchTemplate: '搜索模板',
      referenceList: '引用列表',
      buildName: '构建名称',
      noneVariable: '空',
      deleteConfirmation: '确定要删除 {name} 这个模板吗？',
      templateDeleted: '删除成功',
      confirmToSaveTemplate: '构建模板未保存，是否保存？',
      deleteChange: '放弃'
    }
  },
  workflowTaskStatus: {
    notRunning: '未运行',
    waitforapprove: '待审批',
    created: '排队中',
    waiting: '排队中',
    running: '正在运行',
    failed: '失败',
    passed: '成功',
    timeout: '超时',
    cancelled: '取消',
    blocked: '阻塞',
    queued: '队列中',
    skipped: '跳过',
    prepare: '准备环境',
    reject: '拒绝',
    pending: '排队中'
  },
  workflow: {
    workflowName: '工作流名称',
    ascendingByName: '按名称升序',
    descendingByName: '按名称降序',
    ascendingByCreationTime: '按创建时间升序',
    descendingByCreationTime: '按创建时间降序',
    addView: '新建视图',
    editView: '编辑视图',
    delView: '删除视图',
    searchWorkflow: '搜索工作流',
    noWorkflow: '暂无可展示的工作流，请手动新建工作流',
    productWorkflow: '产品工作流',
    productWorkflowAbility: '具备模块化组装构建、部署、测试和版本交付能力',
    customWorkflow: '自定义工作流',
    customWorkflowAbility: '可自定义工作流步骤和自由编排执行顺序',
    customWorkflowDocument: '企业版支持使用模板新建，详情参考',
    releaseWorkflow: '发布工作流',
    releaseWorkflowAbility: '可自由编排发布流程，具备数据变更、配置变更、灰度发布等能力',
    chooseWorkflowType: '选择工作流类型',
    runProductWorkflow: '运行 产品-工作流',
    runWorkflow: '执行工作流',
    viewName: '视图名称',
    inputViewName: '请填写视图名称',
    selectWorkflow: '选择工作流',
    addEmptyWorkflow: '新建空白工作流',
    use: '使用',
    customWorkflowTemplate: '自定义工作流模板',
    releaseWorkflowTemplate: '发布工作流模板',
    builtInTemplate: '内置模板',
    selectTemplate: '选择模板',
    deleteWorkflowTip: '删除工作流 {name}',
    confirmWorkflowName: '输入工作流名称确认',
    delSuccess: '删除成功',
    inputWorkflowName: '请输入工作流名称',
    nameMismatch: '名称不相符',
    cancelDel: '取消删除',
    newWorkflowName: '新工作流名称',
    newWorkflowID: '新工作流标识',
    copyWorkflow: '复制工作流',
    cancelCopyWorkflow: '取消复制',
    copyWorkflowSuccess: '复制工作流成功',
    duplicateWorkflowName: '工作流名称重复',
    addSuccess: '新增成功',
    updateSuccess: '编辑成功',
    delScuuess: '删除成功',
    run: '执行',
    starting: '启动中',
    debug: '调试',
    close: '关闭',
    open: '打开',
    timer: '定时器',
    timerOpenSuccess: '定时器开启成功',
    timerCloseSuccess: '定时器关闭成功',
    inputWorkflowID: '请输入工作流标识',
    customWorkflowTag: '自定义',
    releaseWorkflowTag: '发布',
    productWorkflowTag: '产品',
    recentSuccess: '最近成功',
    recentFail: '最近失败',
    averageExecutionTime: '平均执行时间',
    successRate: '成功率',
    recentTask: '最近执行',
    cancelFavoriteSuccess: '取消收藏成功',
    addFavoriteSuccess: '添加收藏成功',
    updateBy: '修改人',
    lastModify: '最后修改时间',
    historyTask: '历史任务',
    runStatus: '运行状态',
    duration: '持续时间',
    executor: '执行人',
    env: '环境',
    testResults: '测试结果',
    clone: '克隆',
    manualReview: '人工审核',
    workflowVars: '工作流变量',
    cancelSuccess: '取消成功',
    retrySuccess: '重试成功',
    jobType: {
      build: '构建',
      deploy: '部署',
      approval: '审批',
      freestyle: '通用任务',
      plugin: '插件',
      test: '测试',
      scan: '代码扫描',
      distribute: '镜像分发',
      customDeploy: 'Kubernetes 部署',
      canaryDeploy: '金丝雀部署',
      canaryConfirm: '金丝雀发布',
      blueGreenDeploy: '部署蓝绿环境',
      blueGreenConfirm: '蓝绿发布',
      k8sResourcePatch: '更新 K8s YAML 任务',
      k8sGrayRollback: '灰度回滚',
      grayDeploy: '灰度发布',
      istioRelease: 'Istio 发布',
      istioRollback: 'Istio 回滚',
      jira: 'JIRA 问题状态变更'
    },
    imageName: '镜像名称',
    deploymentEnv: '部署环境',
    deploymentService: '部署服务',
    serviceStatusCheck: '状态检测',
    notOpenServiceStatusCheck: '未开启服务状态检测',
    serviceStatusCheckPassed: '服务状态检测通过',
    serviceStatusCheckFailed: '服务状态检测未通过',
    scanName: '扫描名称',
    link: '链接',
    view: '查看',
    projectName: '项目名称',
    fileExport: '文件导出',
    testReport: '测试报告',
    download: '下载',
    k8sServiceName: 'K8s service 名称',
    containerName: '容器名称',
    cluster: '集群',
    namespace: '命名空间',
    time: '时间',
    message: '信息',
    ui: '界面化',
    yaml: 'YAML',
    desc: '描述信息',
    jobName: '任务名称',
    buildName: '构建名称',
    buildConfig: '构建配置',
    varConfig: '变量配置',
    branchConfig: '分支配置',
    storageConfig: '共享存储配置',
    sensitiveInformation: '敏感信息',
    containerStatusDetection: '容器状态检测',
    scanConfig: '扫描配置',
    chooseScan: '选择扫描',
    grayPercentage: '灰度百分比',
    grayTaskType: '灰度任务类型',
    resourceName: '资源名称',
    updateContent: '更新内容',
    job: '任务',
    stage: '阶段',
    stageName: '阶段名称',
    concurrentExecution: '并发执行',
    concurrentExecutionTip: '当同时更新多个不同服务时，产生的多个任务将会并发执行，以提升工作流运行效率',
    preStep: '前置步骤',
    manualApproval: '人工审批',
    approvalWay: '审批方式',
    reviewer: '审批人',
    revieweNumber: '需要审批人数',
    approvalApplication: '审批应用',
    selectApprover: '选择审批人',
    addStage: '新建阶段',
    editStage: '编辑阶段',
    webhookType: 'Webhook 类型',
    notifyEvents: '通知事件',
    webhookAddr: 'Webhook 地址',
    specifyMembersTip1: '@指定成员（输入指定成员的手机号码，使用 ; 分割，输入 “All” 代表通知全员）',
    specifyMembersTip2: '@指定成员（输入指定成员的 user_id，使用 ; 分割）',
    specifyMembersTip3: '@指定成员（输入指定成员的用户 ID，使用 ; 分割，输入 “All” 代表通知全员）',
    notifyType: {
      created: '任务开始',
      passed: '任务成功',
      failed: '任务失败',
      timeout: '任务超时',
      cancelled: '任务取消',
      changed: '状态变更',
      reject: '任务拒绝',
      waitforapprove: '等待人工审批'
    },
    addNotify: '新建通知',
    editNotify: '编辑通知',
    runPolicy: '运行策略',
    shareDirectory: '共享目录',
    inputShareDirectory: '请输入共享目录',
    addTrigger: '添加触发器',
    editTrigger: '编辑触发器',
    targetBranch: '目标分支',
    triggerStrategy: '触发策略',
    workflowExecutionVariables: '工作流执行变量',
    triggerEvents: '触发事件',
    baseType: {
      var: '变量',
      trigger: '触发器',
      notify: '通知',
      advancedSettings: '高级配置'
    },
    selectService: '选择服务',
    distributionWay: '分发方式',
    triggerWay: '触发方式',
    timeConfig: '时间配置',
    workflowParams: '工作流参数',
    addTimer: '添加定时器',
    editTimer: '修改定时器',
    cronExpressionAnalysis: 'Cron 表达式解析',
    addTest: '添加测试',
    regularExpressionConfiguration: '正则表达式配置',
    inputRegExpressionConfiguration: '请输入正则表达式配置',
    selectTargetBranch: '请选择目标分支',
    selectNotifyType: '请选择通知类型',
    inputWechatWebhook: '请填写企业微信 Webhook',
    inputDingTalkWebhook: '请填写钉钉 Webhook',
    inputLarkWebhook: '请填写飞书 Webhook',
    auditResults: '审核结果',
    auditTime: '审核时间',
    comments: '评论信息',
    specifyEnvironment: '指定环境',
    specifyEnvironmentTip: '支持工作流默认部署到某个环境',
    imageVersionRollback: '镜像版本回退',
    imageVersionRollbackTip: '当任务运行状态和测试结果满足回退策略的设定，镜像版本将自动回退到上一个版本',
    setFallbackPolicy: '设置回退策略',
    saveAsTemplate: '保存为模板',
    templateName: '模板名称',
    inputTemplateName: '请输入模板名称',
    pleaseSaveTrigger: '保存当前工作流配置后才可配置触发器',
    selectTriggerType: '选择触发器类型',
    gitTrigger: 'Git 触发器',
    codeChangeTrigger: '代码变更触发',
    timedTrigger: '定时触发',
    baseInfo: '基本信息',
    buildInfo: '构建信息',
    deliveryList: '交付清单',
    versionInfo: '版本信息',
    versionName: '版本名称',
    versionDesc: '版本描述',
    versionTag: '版本标签',
    productTest: '产品测试',
    selectContainer: '选择容器',
    noNeedToEnterVariables: '无需输入变量',
    executeWithChangedCode: '使用变更的代码执行',
    fillInfoAndClickSave: '填写相关信息，然后点击保存',
    advancedSetting: '高级设置',
    notUseWorkspaceCaching: '不使用工作空间缓存',
    notUseWorkspaceCachingTip: '可能会增加任务时长。如果构建中不使用工作空间缓存，该设置会被忽略',
    notUseDockerCache: '不使用 Docker 缓存',
    notUseDockerCacheTip: '只对配置了镜像构建步骤的构建生效',
    quickSelectService: '快捷选服务',
    quickSelectServiceTip: '通过指定构建配置间接选择出需要的服务',
    selectTest: '选择测试',
    testConfig: '测试配置',
    selectShareDirectory: '选择共享目录',
    enableSharedStorage: '开启共享存储',
    enableSharedStorageTip: '集群无共享存储资源，请前往「系统设置」-「集群管理」配置',
    runtimeInput: '运行时输入',
    fixedvalue: '固定值',
    globalVariableOrotherTaskOutput: '全局变量/其他任务输出',
    workflowTemplate: '工作流模板',
    atLeastOneStage: '请至少填写一个阶段',
    inputStageJob: '请填写 {name} 中的任务',
    saveJobconfigFirst: '请先保存任务配置',
    atLeastOneJob: '请至少创建一个任务',
    saveLastJobconfigFirst: '请先保存上一个任务配置',
    confirmDelStage: '确定删除阶段 {name}',
    duplicateJobName: 'Job 名称重复',
    inputTargetImage: `请填写 {serviceName} 中的目标镜像版本`,
    addJIRAWebhook: '添加 JIRA 触发器',
    editJIRAWebhook: '编辑 JIRA 触发器',
    addLarkWebhook: '添加飞书项目',
    editLarkWebhook: '编辑飞书项目',
    addCommonWebhook: '添加通用项目',
    editCommonWebhook: '编辑通用项目',
    JIRAWebhook: 'JIRA 触发器',
    JIRAWebhookTip: 'JIRA 问题状态变更触发',
    larkWebhook: '飞书项目触发器',
    larkWebhookTip: '飞书工作项状态变更触发',
    commonWebhook: '通用触发器',
    commonWebhookTip: '第三方系统 Webhook 触发',
    jiraProject: 'Jira 项目',
    issueType: '问题类型',
    changedIssue: '变更的问题',
    targetStatus: '目标状态',
    keyword: '关键字',
    outline: '概要',
    columnField: '列字段',
    deployContent: '部署内容',
    serviceVarConfig: '服务变量配置',
    fromJobDiffTitle: '执行时，values 中的镜像信息将被前置 {name} 任务生成的镜像信息替换',
    jobNotReady: '任务未配置完成'
  },
  webhookType: {
    dingding: '钉钉',
    wechat: '企业微信',
    feishu: '飞书'
  },
  approvalType: {
    feishu: '飞书审批',
    manualApproval: '人工审批'
  },
  triggerWay: {
    timing: '定时循环',
    gap: '间隔循环',
    crontab: 'Cron 表达式'
  },
  productWorkflowSideBar: {
    base: '基本信息',
    build: '构建部署',
    artifact: '交付物部署',
    test: '测试',
    distribute: '分发部署',
    expand: '扩展',
    trigger: '触发器',
    notify: '通知'
  },
  resetPolicy: {
    taskCompleted: '任务执行完成',
    deployFailed: '部署结果失败',
    testFailed: '测试结果失败'
  },
  productWorkflowStage: {
    buildv2: '构建',
    build: '构建部署',
    deploy: '部署',
    artifact: '交付物部署',
    test: '测试',
    testingv2: '测试',
    release_image: '分发',
    distribute: '分发部署'
  },
  services: {
    common: {
      servicesManagement: '服务管理',
      serviceOrchestration: '服务编排',
      inputServiceName: '请输入服务名称',
      syncFromRepository: '从代码库同步',
      syncFromTemplate: '使用模板新建',
      searchService: '搜索服务',
      updateService: '更新服务',
      createService: '新建服务',
      startupSequence: '启动顺序',
      detectedServiceModules: '检测到的服务组件',
      detectedServiceModulesTooltip: '可被更新的服务容器名称',
      policySection: '策略',
      helpSection: '帮助',
      projectWithoutService: '暂无服务，请点击',
      toCreateService: '新建服务',
      serviceModule: '服务组件',
      serviceImageName: '镜像名',
      serviceImageLabel: '当前镜像版本($IMAGE)',
      buildInfoAndOperation: '构建信息/操作',
      serviceBuild: '构建',
      addServiceBuild: '添加构建',
      addToEnv: '加入环境'
    },
    k8s: {
      selectFileToSync: '请选择要同步的文件或文件目录',
      createServiceSyncFromRepo: '新建服务-从代码库同步',
      serviceNameMismatch: '当前服务名称和选中的文件夹名称不符，请重新选择',
      servicesIncluded: '包含服务：',
      inputByManual: '手动输入',
      serviceName: '服务名称',
      originProject: '所属项目',
      sharedService: '共享',
      confirmToDeleteService: '确定要删除 {serviceName} 这个服务吗？',
      importServiceSuccess: '导入服务成功',
      deleteServiceSuccess: '删除服务成功',
      serviceIsNotSaved: '服务配置未保存，是否保存？',
      serviceNameIsDuplicated: '服务名称与现有名称重复',
      checkServiceName: '名称只支持小写字母和数字，特殊字符只支持中划线',
      importFromK8sNamespace: '从 Kubernetes 导入',
      variablesSection: '变量',
      buildInVariables: '系统内置变量',
      buildInVariablesTooltip: '在服务配置中使用 $Namespace$，$Product$，$Service$，$EnvName$ 方式引用',
      customVariables: '自定义变量',
      customVariablesTooltip: '自定义变量通过 {{.key}} 引用',
      currentValue: '当前值',
      globalVariablesManagement: '配置全局变量',
      globalVariablesList: '全局变量列表',
      addKv: '添加变量',
      editKv: '修改变量',
      addGlobalKv: '添加全局变量',
      editGlobalKv: '修改全局变量',
      inputKey: '请输入键名',
      selectKey: '选择键名',
      inputValue: '请输入默认值',
      selectType: '请选择类型',
      optionalValues: '可选值',
      inputOptionalValues: '请输入可选值',
      optionalValuesPlaceholder: '多个可选值请用英文 "," 分隔',
      selectDefaultValue: '请选择默认值',
      yamlChangedTooltip: 'YAML 文件发生变更, 是否保存当前配置?',
      variablesHasBeenSuccessfullySaved: '变量保存成功',
      globalVariablesHasBeenSuccessfullySaved: '全局变量保存成功'
    },
    pm: {},
    helm: {
      imagesSection: '镜像更新',
      detectedServiceModulesTooltip: 'values.yaml 中可被更新的镜像',
      updateMatchRules: '更新匹配规则',
      helmReleaseNameConfiguration: 'Helm Release 名称配置',
      helmReleaseName: 'Release 名称'
    }
  },
  environmentStatus: {
    updateable: '环境可更新',
    creating: '正在创建',
    running: '正在运行',
    updating: '更新中',
    succeeded: '正常',
    unstable: '运行不稳定',
    deleting: '删除中',
    error: '内部错误',
    unknown: '未知'
  },
  environments: {
    common: {
      environmentWithoutService: '该环境暂无服务，请点击',
      toCreateService: '新建服务',
      envName: '环境名称',
      creationMethod: '创建方式',
      selectCreationMethod: '请选择创建方式',
      createNewEnv: '新建',
      copyEnv: '复制',
      copyFrom: '复制来源',
      selectSourceEnv: '请选择目标环境',
      selectResources: '资源选择',
      k8sCluster: 'K8s 集群',
      selectK8sCluster: '请选择 K8s 集群',
      k8sNamespace: 'K8s 命名空间',
      selectK8sNamespace: '选择或自定义命名空间',
      namespaceAlreadyExistsTip: 'Zadig 中定义的服务将覆盖所选命名空间中的同名服务，请谨慎操作！',
      selectImageRepository: '请选择镜像仓库',
      services: '选择服务',
      checkAllServices: '全选',
      clearServices: '清空',
      createEnv: '立即创建',
      envIsCreating: '正在创建环境中....',
      inputEnvName: '填写环境名称',
      checkEnvName: '环境名称只支持小写字母和数字，特殊字符只支持中划线',
      selectServices: '请选择服务',
      environmentHasBeenSuccessfullyCreated: '创建环境成功',
      environmentCreationFailedWithError: '环境创建失败：{error}',
      environmentCreationUnstable: '环境创建成功（运行不稳定）',
      envCreation: '创建环境',
      envStatus: '环境状态',
      runWorkflowToUpgradeService: '通过工作流升级服务',
      hostingEnv: '托管',
      baseEnv: '基准环境',
      subEnv: '子环境',
      enableShareEnvNotReadyTip: '注意：自测模式正在开启，过程中服务会重启，短时间内会影响服务的正常访问，请耐心等待。',
      disableShareEnvNotReadyTip: '注意：自测模式正在关闭，过程中服务会重启，短时间内会影响服务的正常访问，请耐心等待。',
      envChangeLog: '变更记录',
      localCluster: '本地集群',
      envOperation: '基本操作',
      updateTime: '更新时间',
      updateEnvVariables: '更新环境变量',
      updateGlobalVariables: '更新全局变量',
      updateEnvVariablesTip: '更新环境中引用的变量',
      creatingSubEnvironment: '创建子环境',
      serviceManagement: '管理服务',
      addService: '添加服务',
      updateService: '更新服务',
      deleteService: '删除服务',
      updateEnv: '更新环境',
      updateEnvTip: '根据最新环境配置更新，包括服务编排和服务配置的改动',
      envConfig: '环境配置',
      moreOperation: '更多',
      enableShareEnv: '开启自测模式',
      disableShareEnv: '关闭自测模式',
      deleteEnv: '删除环境',
      hostingConfig: '配置托管',
      cancelHosting: '取消托管',
      envEntrypoint: '环境入口',
      getEnvInfoLoading: '正在获取环境信息',
      ingressName: 'Ingress 名称',
      ingressAddress: '地址',
      getServiceInfoLoading: '正在获取服务信息',
      searchService: '搜索服务',
      serviceCounts: '服务总数',
      serviceCountsUnit: '个',
      imageInfo: '镜像',
      selectEnv: '选择环境',
      useGlobalVariables: '使用全局变量',
      associatedServices: '关联服务',
      sureRelatedServices: '服务 {services} 会更新，请确认。',
      noRelatedServices: '无关联的服务需要更新，请确认。',
      restart: '重启',
      sureRestartService: '确定重启服务吗？',
      restartServiceSuccess: '重启服务成功',
      restartServiceCancel: '已取消重启',
      serviceDetail: {
        restartService: '重启服务',
        serviceStatus: '状态',
        viewServiceConfigurationTooltip: '查看服务配置',
        basicOperation: '基本操作',
        serviceConfiguration: '配置管理',
        exportYaml: 'Yaml 导出',
        serviceManagement: '服务管理',
        serviceInstance: '服务实例',
        serviceReplicas: '副本数量',
        restartServiceInstance: '重启实例',
        viewEvents: '查看事件',
        instanceName: '实例名称',
        instanceIp: '实例 IP',
        healthDetection: '健康探测',
        serviceAge: '运行时长',
        nodeInfo: '节点信息',
        restartPod: '重启',
        podImage: '当前镜像',
        startTime: '启动时间',
        podDebug: '调试',
        realTimeLog: '实时日志',
        podName: 'Pod 名称',
        containerName: '容器名称',
        ingressHosts: '外网访问',
        serviceEndpoints: '内网访问',
        startEphemeralContainer: '启动调试容器'
      },
      serviceDeployStrategyTip: '该服务尚未通过 Zadig 部署，可执行「更新服务」操作使用 Zadig 上管理的服务配置重新部署'
    },
    config: {
      configuration: '配置',
      address: '地址',
      linkedServices: '关联服务',
      volume: '挂载点',
      capacity: '容量',
      accessModes: '访问模式',
      addConfigurationSuccess: '添加配置成功！',
      updateConfigurationSuccess: '更新配置成功！',
      deleteConfigurationSuccess: '删除配置 {name} 成功',
      deleteConfigurationConfirm: '确定要删除 {envName} 环境中 {name} 配置？',
      versionHistory: '历史版本',
      compareTheSelectedVersions: '比较所选版本',
      version: '版本',
      creationTime: '创建时间',
      lastModified: '最后修改',
      rollback: '回滚',
      currentVersion: '当前版本',
      versionIndex: '版本 {index}',
      selectVersionLimitation: '只能选择两个版本用于比较',
      noVersionSelected: '配置 diff（未勾选）',
      diffTitle: '{newVersion} 相对于 {oldVersion} 的 diff',
      pastePlaceholder: '可直接粘贴 {currentConfig} 类型的 K8s YAML 文件'
    },
    changelog: {
      changelog: '变更记录',
      APIPayloadDialogTitle: 'API 请求： {time}',
      noPayload: '暂无请求 Payload 信息',
      selectType: '请选择查询类型',
      username: '用户名',
      project: '项目',
      function: '功能',
      statusCode: '状态码',
      inputKeyword: '请输入关键字',
      search: '查询',
      time: '时间',
      detail: '详情',
      APIPayload: 'API 请求',
      searchCompleted: '查询完毕'
    },
    k8s: {
      envRollback: '回溯',
      rollbackVersion: '选择版本',
      selectVersion: '请选择版本',
      versionLabel: '版本号：{version} 创建时间：{time} 创建人：{createBy}',
      globalVariables: '全局变量',
      servicewithoutImage: '{serviceName} 未选择镜像',
      subEnvCreation: '创建子环境',
      envConfigComp: {
        envConfiguration: '环境配置',
        addEnvConfiguration: '添加环境配置',
        importEnvConfigurationFromRepository: '环境配置 - 从代码库导入',
        addEnvConfigurationPlaceholder: '可直接粘贴 Ingress、ConfigMap、Secret、PVC 类型的 K8s YAML 文件',
        configuration: '配置'
      },
      variableListComp: {
        preview: '效果预览',
        selectService: '选择服务',
        selectServicePlaceholder: '请选择服务',
        relatedServices: '关联服务'
      },
      serviceListComp: {
        serviceList: '服务列表',
        quickFilter: '快速过滤：',
        quickFilterFirstTip: '智能选择会优先选择最新的容器镜像，如果在 Registry',
        quickFilterSecondTip: '下不存在该容器镜像，则会选择模板中的默认镜像进行填充',
        selectFilterMethod: '请选择',
        selectLatestImage: '全容器-智能选择镜像',
        selectDefaultImage: '全容器-全部默认镜像',
        resourceDetection: '资源检测',
        resourceDetectionTip: '检查服务中定义的资源在所选的 K8s 命名空间中是否存在',
        onlyImport: '仅导入服务',
        executeDeploy: '执行部署'
      }
    },
    helm: {
      variableListComp: {
        globalServiceVariables: '全局服务变量',
        serviceVariables: '服务变量'
      },
      serviceListComp: {
        searchService: '搜索服务',
        onlyImport: '仅导入服务',
        executeDeploy: '执行部署',
        previewValues: '预览最终 values 文件',
        resourceDetectionTip: 'release 名称在命名空间已存在',
        addValuesFile: '添加 values 文件'
      },
      keyValueComp: {
        title: '指定需要覆盖的键值对',
        inputKey: '请输入 key 值',
        inputValue: '请输入 value 值'
      },
      chartListComp: {
        serviceConfigChangedTip: '服务配置有变更',
        updateServiceDialogTitle: '更新服务 - {serviceName}',
        updateServiceConfigurationCheck: '同时更新服务配置',
        updateValuesDialogTitle: 'Values 文件 - {serviceName}',
        chartName: 'Chart 名称',
        releaseName: 'Release 名称',
        chartDeployStatus: '部署状态',
        deployStatusSuccess: '部署成功',
        deployStatusFailed: '部署失败',
        deployStatusPending: '部署中',
        deployStatusNotDeployed: '尚未部署',
        chartHasBeenUpdatedSuccessfully: '{serviceName} 更新成功！'
      }
    },
    pm: {
      serviceList: '服务列表',
      secondTitle: '单服务或微服务(自定义脚本/Docker 部署)',
      smallTitle: '(请关联服务的主机资源，后续也可以在服务中进行配置)',
      linkToHosts: '请关联主机资源',
      selectHosts: '请选择要关联的主机',
      createHost: '创建主机',
      projectResources: '项目资源',
      systemResources: '系统资源'
    },
    hosting: {
      selectServices: '选择服务',
      inputServiceNameToSearch: '请输入服务名称',
      serviceList: '服务列表',
      selectedServices: '已选服务',
      pleaseSelectServices: '请选择服务',
      serviceNameLabelTooltip: '项目：{projectName}；环境：{envName}'
    }
  },
  sysSetting: {
    integration: {
      accountTab: '账号系统',
      accountTip: '支持集成 Microsoft Active Directory、OpenLDAP、GitHub 以及 OAuth 集成等外部账号系统',
      projectTab: '项目管理',
      projectTip: '支持集成 Jira 和 飞书项目管理系统',
      gitProviderTab: '代码源',
      gitProviderTip: '支持集成代码源，支持 GitLab、GitHub、Gerrit、Gitee(社区版)集成',
      configTab: '配置管理',
      configTip: '支持集成 Nacos 和 Apollo 配置管理系统',
      ciTab: 'CI/CD 工具',
      ciTip: '支持集成 Jenkins Server，配置后工作流可以使用 Jenkins Job 构建镜像',
      scannerTab: '代码扫描',
      scannerTip: '支持集成 Sonar Server，配置后使用 SonarQube 进行代码扫描后可以上传结果到集成的地址',
      approvalTab: '审批系统',
      approvalTip: '支持集成飞书、钉钉审批流，提供在 IM 内部进行审批的能力',
      registryTab: '镜像仓库',
      registryTip: '支持集成阿里云 ACR、腾讯云 TCR、华为云 SWR、Amazon ECR、DockerHub、Harbor 、Nexus 等镜像仓库',
      storageTab: '对象存储',
      storageTip: '支持集成阿里云 OSS、腾讯云 COS、华为云 OBS、七牛云 KODO 等符合 Amazon S3 协议的对象存储',
      helmChartRepoTab: 'Helm 仓库',
      helmChartRepoTip: '支持集成自建 Harbor 仓库及阿里、腾讯、华为等云厂商提供的 Chart 仓库',
      clusterTab: 'Kubernetes 集群',
      clusterTip: '支持阿里云 ACK、腾讯云 TKE、腾讯云 TKE Serverless、华为云 CCE 、Amazon EKS、Azure AKS 等 K8s 集群的接入和使用',
      hostTab: '主机管理',
      hostTip: '支持阿里云 ECS、腾讯云 CVM、华为云 ECS 等主机的接入和使用',
      externalSystemTab: '其他系统',
      externalSystemTip: '支持集成其他外部系统，配置后工作流可以调用外部系统 API',
      gitProviders: {
        notIntegrated: '检测到代码源尚未集成请先集成代码源后再进行相关操作',
        provider: '代码源',
        otherProvider: '其他',
        giteeCE: 'Gitee （社区版）',
        providerAlias: '代码源标识',
        authStatus: '授权信息',
        authSuccess: '授权成功',
        authFailed: '授权失败',
        lastUpdated: '最后更新',
        enableProxy: '开启代理',
        editProvider: '编辑',
        deleteProvider: '删除',
        tip: '支持集成代码源，支持 GitLab、GitHub、Gerrit、Gitee 集成，详情可参考',
        addProviderTitle: '代码管理-添加',
        editProviderTitle: '代码管理-编辑',
        referToDoc: '详细配置可参考',
        appAuthCallbackTip: '应用授权的回调地址请填写：',
        appPermissionCheckTip: '应用权限请勾选：',
        otherProviderTipFirst: '支持标准 Git 协议的代码源',
        otherProviderTipSecond: '集成后，构建/测试模板可从该代码源拉取代码',
        copyAddrSuccess: '地址已成功复制到剪贴板',
        copyAddrFailed: '地址复制失败',
        gitlabUrl: 'GitLab 服务 URL',
        gerritUrl: 'Gerrit 服务 URL',
        giteeUrl: 'Gitee 服务 URL',
        providerUrl: '代码源 URL',
        authMethod: '鉴权方式',
        username: '用户名',
        password: '密码',
        selectProvider: '请选择代码源类型',
        inputAddress: '请输入 URL，包含协议',
        inputAccessToken: '请填写 Access Token',
        inputAppId: '请填写 Id',
        inputclientSecret: '请填写 Secret',
        inputUsername: '请填写 Username',
        inputPass: '请填写 Password',
        inputSSHKey: '请输入 SSH Key',
        inputPrivateAccessToken: '请输入 Access token',
        inputAlias: '请填写代码源标识',
        inputOtherProviderUrl: '请输入服务 URL',
        checkOtherProviderUrl: '请输入正确的格式',
        selectAuthMethod: '请选择鉴权方式',
        goToAuthorization: '前往授权',
        proxyIsEnabled: '已启用代理',
        proxyIsDisabled: '已关闭代理',
        noProxy: '未配置代理，请先前往「系统配置」->「代理配置」配置代理！',
        proxyEnableFailed: '代理修改失败：',
        getProxyConfigurationFailed: '获取代理配置失败：',
        confirmDeleteProvider: '确定要删除这个代码源吗？',
        deleteProviderSuccess: '代码源删除成功',
        addProviderSuccess: '代码源添加成功',
        changeProviderInfoSuccess: '代码源修改成功',
        changeProviderInfoSuccessAndGoToAuth: '代码源修改成功，正在前往授权'
      },
      accounts: {
        account: '账号系统名称',
        accountType: '账号系统类型',
        custom: '自定义'
      },
      project: {
        sysType: '系统类型',
        addProjectManageSys: '添加项目管理系统',
        editProjectManageSys: '编辑项目管理系统',
        address: '访问地址',
        userName: '用户名',
        token: '密码/Token',
        configurationAddedSuccessfully: '配置添加成功',
        configurationModifiedSuccessfully: '配置修改成功',
        configurationDelSuccessfully: '配置删除成功',
        referToDoc: '支持集成 Jira 和 飞书项目管理系统，详情可参考',
        confirmDel: '确定要删除这个配置吗？'
      }
    },
    packages: {
      addPackage: '添加软件包',
      version: '版本',
      versionExample: '例如：1.0.0',
      enable: '启用',
      enableTooltip: '控制软件包列表中是否展示，正在使用中的不受影响',
      enableCurrentPackage: '启用该软件包',
      packageAddress: '安装包地址',
      // eslint-disable-next-line no-template-curly-in-string
      packageAddressTooltip: '系统自动从配置地址下载安装包并做缓存，安装包可通过 ${FILEPATH} 变量获取',
      installScript: '安装脚本',
      editPackage: '修改软件包-{name} {version}',
      referToDoc: '运行构建及测试步骤时，根据实际业务去安装必要的软件包，详情可参考',
      enableProxy: '启用代理',
      updateTime: '更新时间',
      updator: '更新人',
      inputPackageName: '请填写软件包名称',
      inputPackageVersion: '请填写软件包版本',
      inputInstallScript: '请填写安装脚本',
      inputPackageBinPath: '请填写软件包 Bin Path',
      addPackageSuccess: '添加软件包成功',
      addPackageFailed: '添加软件包失败',
      updatePackageSuccess: '更新软件包成功',
      updatePackageFailed: '更新软件包失败',
      packageHasBeenDeleted: '软件包已删除',
      cancelDelete: '已取消删除',
      deleteTip: '删除软件包可能会影响正在使用的工作流，确定删除 {name} 的 {version} 版本吗？',
      noProxy: '未配置代理，请先前往「系统配置」->「代理配置」配置代理！',
      proxyIsEnabled: '启用代理成功！',
      proxyIsDisabled: '成功关闭代理！',
      changeProxyFailed: '修改配置失败：{error}',
      getProxyConfigurationFailed: '获取代理配置失败：{error}'
    },
    images: {
      addImage: '添加镜像',
      label: '标签',
      imageName: '镜像名称',
      imageNamePlaceholder: '仓库地址/命名空间/镜像名:标签',
      editImage: '修改镜像',
      referToDoc: '项目的构建、测试和代码扫描可以使用自定义镜像作为基础环境镜像，自定义镜像中需要添加一些必要软件包，详情可参考',
      inputLabel: '请输入镜像标签',
      inputImageName: '请输入镜像名称',
      deleteTip: '确定要删除 {label} 这个镜像吗？',
      confirm: '删除镜像确认',
      imageHasBeenDeleted: '镜像已删除',
      addImageSuccess: '添加镜像成功',
      updateImageSuccess: '更新镜像成功'
    },
    plugins: {},
    registry: {},
    storage: {},
    helmRepo: {
      addHelmChartRepo: '添加 HELM Chart 仓库',
      editHelmChartRepo: '编辑 HELM Chart 仓库',
      urlPlaceholder: '请输入 http/https/acr 开头的 URL',
      repoName: '仓库名称',
      inputRepoName: '请输入仓库名称',
      username: '用户名',
      inputUsername: '请输入用户名',
      inputPassword: '请输入密码',
      password: '密码',
      referToDoc: '支持集成自建 Harbor 仓库及阿里、腾讯、华为等云厂商提供的 Chart 仓库，详情可参考',
      lastModified: '最后修改',
      protocolCheck: '请确保协议以 http/https/acr 开头',
      inputUrl: '请输入 URL',
      deleteTip: '确定要删除 {repoName} 仓库？',
      confirm: '确认',
      repoHasBeenDeleted: '删除成功',
      addRepoSuccess: '添加成功',
      updateRepoSuccess: '更新成功'
    },
    clusters: {},
    hosts: {},
    settings: {},
    users: {
      users: '用户',
      systemRoles: '系统角色',
      addUser: '新建用户',
      username: '用户名',
      password: '密码',
      mail: '邮箱',
      nickname: '昵称',
      phone: '手机',
      role: '角色',
      selectRole: '请选择角色',
      searchUser: '搜索用户',
      inputNickname: '请输入昵称',
      userRegistration: '用户注册',
      admin: '管理员',
      loginInfo: '登录信息',
      notLoggedIn: '尚未登录',
      source: '来源',
      inputUsername: '请输入用户名',
      inputMail: '请输入登录邮箱',
      checkMail: '请输入正确的邮箱地址',
      inputPassword: '请输入密码',
      deleteUserTip: '确定删除 {type} 用户 {name}',
      tip: '提示',
      identityTypeSystem: '系统创建',
      userHasBeenDeleted: '用户删除成功',
      cancelDelete: '已取消删除',
      addImageSuccess: '新建用户成功',
      changeUserRegistrationStatusSuccess: '更改成功',
      roleTip: '可定义系统级别的角色，包括数据概览、效能洞察、测试中心、交付中心、模板库模块的权限控制',
      roleName: '角色名称',
      roleDesc: '描述信息',
      permissionList: '权限列表',
      deleteRoleTip: '此角色的成员权限也会被删除，请谨慎操作',
      deleteRoleConfirm: '确定删除 {name} 这个系统角色',
      roleHasBeenDeleted: '系统角色删除成功',
      inputRoleName: '请填写角色名称',
      roleNameCheck: '角色名称只支持小写字母和数字，特殊字符只支持中划线',
      addRoleSuccess: '添加成功',
      updateRoleSuccess: '修改成功',
      updateUserSuccess: '用户信息修改成功',
      updateUserInfoDialogTitle: '编辑 {name} 的用户信息'
    },
    announcement: {
      addAnnouncement: '添加公告',
      title: '标题',
      priority: '优先级',
      selectPriority: '请选择优先级',
      high: '高',
      medium: '中',
      low: '低',
      timeRange: '时间范围',
      startTime: '开始时间',
      timeTo: '至',
      endTime: '结束时间',
      content: '内容',
      editAnnouncement: '编辑公告',
      inputTitle: '请输入公告标题',
      inputContent: '请填写公告内容',
      selectStartTimeAndEndTime: '请选择起止时间',
      announcementHasBeenDeleted: '公告已删除',
      addAnnouncementSuccess: '新增公告成功',
      addAnnouncementFailed: '新增公告失败',
      editAnnouncementSuccess: '编辑公告成功',
      editAnnouncementFailed: '编辑公告失败'
    },
    auditLog: {
      APIPayloadDialogTitle: 'API 请求： {time}',
      noPayload: '暂无请求 Payload 信息',
      selectType: '请选择查询类型',
      username: '用户名',
      project: '项目',
      function: '功能',
      statusCode: '状态码',
      inputKeyword: '请输入关键字',
      search: '查询',
      time: '时间',
      detail: '详情',
      APIPayload: 'API 请求',
      searchCompleted: '查询完毕'
    }
  },
  testing: {
    title: '测试',
    noTestsErrorMessage: '暂无可展示的测试用例，请手动新建测试',
    searchTests: '搜索测试',
    caseCount: '用例数量',
    executionCount: '执行次数',
    averageExecutionTime: '平均执行时间',
    successRate: '成功率',
    creationSuccess: '任务启动成功',
    restartSuccess: '任务已重新启动',
    cancellationSuccess: '任务取消成功',
    deletionConfirmation: '确定要删除 {name} 吗？',
    deletionSuccess: '删除成功',
    triggers: {
      workflowTriggers: '已关联的工作流',
      selectWorkflowTriggers: '选择关联的工作流',
      selectWorkflowTriggersII: '请选择要关联的工作流，支持搜索',
      creationSuccess: '关联工作流成功',
      deletion: '取消关联',
      deletionSuccess: '移除关联成功',
      deletionCancellation: '已取消删除',
      deletionConfirmation: '确定要取消和工作流 {name} 的关联'
    },
    details: {
      name: '测试名称',
      description: '描述信息',
      parameters: '测试变量',
      scripts: '测试脚本',
      report: {
        configuration: '测试报告配置',
        junitReportDirectory: 'Junit 报告所在目录',
        htmlReportFileDirectory: 'HTML 报告文件地址',
        htmlReportFileTooltip: 'HTML 测试报告文件将包含在工作流发送的 IM 通知内容中'
      },
      advancedSettings: {
        title: '高级配置',
        exportReport: {
          title: '测试结果导出',
          filePath: '文件导出路径',
          filePathExplanation: '设置一个或者多个文件目录，测试完成后可以在工作流任务详情页面进行下载，通常用于测试日志等文件的导出'
        },
        hooksAndNotification: {
          title: '触发器与通知',
          webhookTitle: '代码变更触发',
          timerTitle: '定时器触发',
          notificationTitle: '通知配置'
        }
      }
    },
    taskDetails: {
      exportArtifact: 'Artifact 文件导出',
      basicInformation: {
        title: '基本信息',
        creator: '创建者',
        canceller: '取消者',
        duration: '持续时间',
        retry: '失败重试',
        cancel: '取消任务'
      },
      taskInfo: {
        head: '测试任务',
        executionStatus: '运行状态',
        report: '测试报告',
        view: '查看',
        exportedFile: '文件导出',
        download: '下载',
        status: '任务状态',
        errorMessage: '错误信息',
        acknowledged: '知道了'
      },
      report: {
        overview: '测试报告概览',
        caseDetails: '详细用例'
      },
      cases: {
        description: '测试用例描述',
        result: '测试结果',
        executionTime: '运行时间(s)'
      },
      logs: {
        fetchErrorMessage: '测试日志获取失败'
      }
    },
    validation: {
      testNameInsertionPrompt: '请输入测试名称',
      testNameVaidationError: '名称只支持字母和数字，特殊字符只支持中划线和下划线',
      testDescriptionInsertionPrompt: '请输入描述信息',
      testReportDirectoryInsertionPrompt: '请输入测试报告目录',
      testReportFileInsertionPrompt: '请输入测试报告文件'
    },
    summary: {
      latest: '最新一次测试报告',
      caseCount: '总测试用例',
      successCount: '成功用例',
      failCount: '失败用例',
      errorCount: '错误用例',
      unstartCount: '未执行用例',
      timeConsumption: '测试用时',
      checkCases: '查看用例',
      caseDetails: '详细用例（可滚动查看）'
    },
    history: {
      title: '历史任务'
    },
    status: {
      success: '成功',
      fail: '失败',
      unstart: '未执行',
      error: '错误'
    },
    display: {
      failReason: '失败原因：',
      failMessage: '失败信息：',
      failDetail: '失败详情：',
      standardOut: '标准输出：',
      errorMessage: '错误信息：',
      errorDetail: '错误详情：',
      errorType: '错误类型：'
    }
  },
  scanning: {
    title: '代码扫描',
    titleWithScanName: '代码扫描 {name}',
    taskCreationSuccess: '任务创建成功',
    executor: '执行人',
    canceller: '取消者',
    cancelTask: '取消任务',
    timesRun: '执行次数',
    averageDuration: '平均耗时',
    taskStatus: '任务状态',
    resultLink: '链接',
    viewResultLink: '查看',
    advancedSettings: {
      title: '高级配置',
      hooksAndNotification: {
        title: '触发器与通知',
        webhookTitle: '代码变更触发',
        notificationTitle: '通知配置'
      }
    },
    details: {
      basicInformation: '基本信息',
      description: '描述信息',
      scanner: '扫描工具',
      scannerTypeOther: '其他',
      image: '扫描环境',
      packages: '依赖的软件包',
      sonarAddress: 'Sonar 地址',
      parameters: '参数配置',
      preScanScript: '前置脚本',
      qualityGate: '质量门禁检查',
      scanningScript: '扫描脚本',
      innerVar: '内置变量'
    },
    prompt: {
      timeMismatch: '本地系统时间和服务端可能存在不一致，请同步。',
      inputScanningName: '请输入代码扫描名称',
      scanningNamingConvention: '名称只支持小写字母和数字，特殊字符只支持中划线',
      inputDescription: '请输入描述信息',
      chooseScanner: '选择扫描工具',
      chooseImage: '选择扫描环境',
      imageCannotBeEmpty: '扫描环境不能为空',
      createImage: '新建扫描环境',
      packageCannotBeEmpty: '不能为空',
      selectSonarAddress: '选择 Sonar 地址',
      sonarAddressCannotBeEmpty: 'Sonar 地址不能为空',
      sonarParameterPopup: 'Sonar 地址和 token 在执行时自动注入',
      qualityGatePopup: '开启质量门禁检查后，如果门禁未通过，任务状态置为失败',
      editConfirmation: '确认修改',
      deleteConfirmation: '确定要删除 {scanningName} 这个代码扫描吗？',
      createNow: '立即新建',
      created: '新建 {name} 成功！',
      updated: '更新 {name} 成功！',
      deleted: '删除成功',
      canceled: '任务取消成功',
      restarted: '任务已重新启动',
      searchForScanning: '搜索代码扫描',
      noScanning: '暂无可展示的代码扫描，请手动新建代码扫描'
    }
  },
  repository: {
    prompt: {
      chooseBranchOrTag: '请选择分支或标签',
      inputBranchOrTag: '请输入分支或标签',
      chooseBranch: '请选择分支',
      getBranchErrorInputBranch: '请求分支失败，请手动输入分支',
      inputBranch: '请填写分支',
      choosePR: '请选择 PR',
      inputPR: '请填写 PR 号',
      prDoesNotExist: 'PR 不存在，支持手动输入 PR 号，多个 PR 用 , 分隔',
      usePRorTagTemplate: '使用 ',
      selectGitProvider: '请选择代码源',
      selectRepo: '请选择代码库',
      selectBranch: '请选择分支',
      selectOrgOrUsername: '请选择组织名/用户名',
      selectFileOrFolder: '请选择文件',
      inputAddress: '请输入 URL，包含协议'
    },
    info: {
      repository: '代码库',
      provider: '代码源',
      orgOrUser: '组织名/用户名',
      branch: '分支',
      org: '团队',
      enterprise: '企业',
      fileOrFolder: '选择文件(夹)',
      creatorTemplate: '创建人：',
      creationTimeTemplate: '时间：',
      sourceBranchTemplate: '源分支：',
      targetBranchTemplate: '目标分支：'
    }
  },
  deliveryCenter: {
    versionManagement: '版本管理',
    artifactsTracking: '交付物追踪',
    hookConfiguration: 'Hook 配置',
    selectExternalSystem: '请选择外部系统',
    inputAccessAddress: '请输入访问路径',
    versionName: '版本',
    originProject: '所属项目',
    versionTag: '标签',
    versionInfo: '版本信息',
    creationTime: '创建时间',
    noVersion: '暂无可展示的版本信息',
    helmStatus: {
      success: '成功',
      failed: '失败',
      creating: '创建中',
      retrying: '重试中',
      unknown: '未知'
    },
    deleteVersion: '删除版本',
    confirmToDeleteVersion: '确定删除 {version} 这个版本？',
    versionHasBeenDeleted: '版本删除成功',
    deletionCancellation: '已取消删除',
    configurationHasBeenUpdated: '配置更新成功',
    deliveryContent: '交付内容',
    deliveryProgressDetails: '进度详情',
    uploadChartAndImage: '上传 Chart 和镜像',
    uploadStatus: {
      success: '成功',
      failed: '失败',
      waiting: '等待上传',
      uploading: '上传中',
      creating: '创建中',
      retrying: '重试中',
      undefine: '未知'
    },
    chartInfo: 'Chart 信息',
    chartName: 'Chart 名称',
    chartRepo: 'Chart 仓库',
    chartVersion: '版本库',
    offlinePkgInfo: '离线包信息',
    offlinePkgName: '离线包名称',
    componentName: '组件名称',
    imageName: '镜像名称',
    objectStorage: '对象存储',
    retrySuccess: '重试成功',
    artifactType: '交付物类型',
    artifactName: '名称',
    repoName: '代码仓库',
    inputRepoName: '请输入代码仓库',
    inputRepoBranch: '请输入分支',
    inputKeyword: '请输入关键字',
    selectArtifactType: '请选择交付物类型',
    selectFilterType: '请选择过滤条件',
    imageSize: '镜像大小',
    commitMessage: 'Commit 信息',
    noArtifact: '暂无交付物，请选择需要筛选的交付物',
    fileInfo: '文件信息',
    architecture: '架构',
    operatingSystem: '操作系统',
    buildInfo: '构建信息',
    commitAuthorName: '提交人',
    activeTimeline: '活动时间线',
    activeTimelineContent: '内容',
    namespace: '命名空间',
    deployEnv: '部署环境',
    addComment: '添加备注',
    inputCommentContent: '请输入备注内容',
    viewServiceConfiguration: '查看服务配置',
    serviceConfiguration: '服务配置',
    imageAndServiceConfiguration: '镜像和配置信息',
    serviceAndServiceModule: '服务组件(服务名称)',
    packageInfo: '包信息',
    packageFileName: '包文件名',
    serviceStartupSequence: '服务启动顺序',
    startupSequence: '启动顺序',
    releaseCurrentVersion: '版本发布',
    jiraInfo: 'Jira 问题关联',
    jiraIssues: '关联问题',
    issueReporter: '报告人',
    issueAssignee: '分配给',
    issuePriority: '优先级'
  },
  dataStatistics: {
    overview: {
      overview: '概览',
      clusters: '集群',
      clustersUnit: '个',
      projects: '项目',
      projectsUnit: '个',
      services: '服务',
      servicesUnit: '个',
      workflows: '工作流',
      workflowsUnit: '条',
      environments: '环境',
      environmentsUnit: '个',
      artifacts: '交付物',
      artifactsUnit: '个',
      successRate: '成功率',
      automationOfProcesses: '自动化流程',
      buildAutomation: '自动化构建',
      totalBuilds: '总次数',
      recentBuilds: '近 30 天构建情况',
      deployAutomation: '自动化部署',
      totalDeploys: '总次数',
      recentDeploys: '近 30 天部署情况',
      testAutomation: '自动化测试',
      totalTestCases: '测试用例数',
      totalExecutionCount: '执行次数',
      averageDuration: '平均耗时（S）'
    },
    insight: {
      buildInsight: '构建效能',
      buildTrend: '构建趋势（周）',
      buildHealthiness: '构建健康度',
      lastBuilds: '最近 10 次构建',
      dailyBuildFrequency: '日构建频次',
      averageBuildDuration: '平均构建时长',
      longestDurationBuild: 'Top 10 耗时较长的构建',
      testInsight: '测试效能',
      testTrend: '测试趋势（周）',
      testHealthiness: '测试健康度',
      averageTestDuration: '平均测试时长',
      testBenefits: '周测试收益（执行次数 x 测试用例数）',
      deliveryDeployByWeek: '周交付部署次数',
      deployInsight: '部署效能',
      serviceHealthiness: '微服务健康度',
      serviceDeploymentStatistics: 'Top 5 微服务部署统计',
      serviceDeploymentFailedStatistics: 'Top 5 微服务部署失败统计',
      frequencyOfWeeklyDeployments: '微服务周部署频次',
      taskStatus: '任务状态',
      taskId: '任务号',
      taskTime: '日期',
      numberOfFailures: '失败次数',
      taskDuration: '任务耗时',
      selectProject: '选择项目',
      startTime: '开始日期',
      endTime: '结束日期',
      lastWeek: '最近 1 周',
      lastMonth: '最近 1 个月',
      lastThreeMonths: '最近 3 个月',
      lastYear: '最近 1 年'
    }
  },
  build: {
    buildName: '构建名称',
    testEnv: '测试执行环境',
    buildEnv: '构建环境',
    buildType: '构建方式',
    buildTypeZadig: 'Zadig 构建',
    buildTypeJenkins: 'Jenkins 构建',
    image: '操作系统',
    useTemplate: '使用模板',
    customize: '自定义',
    packages: '依赖的软件包',
    variableKey: '变量名称',
    variableOptions: '可选值',
    systemTestVariables: '内置测试变量',
    systemBuildVariables: '内置构建变量',
    testVariables: '自定义测试变量',
    buildVariables: '自定义构建变量',
    imageNamingRules: '镜像名称规则',
    secretParameter: '敏感信息',
    secretParameterTooltip: '设置为敏感信息变量后，系统会将变量进行加密，使用时进行解密，同时在工作流运行日志里不可见',
    addSteps: '添加步骤',
    stepImageBuild: '镜像构建',
    stepArtifactUpload: '二进制包存储',
    stepFileUpload: '文件存储',
    stepRunShellScript: 'Shell 脚本执行',
    buildContextDirectory: '构建上下文目录',
    dockerfileSource: 'Dockerfile 来源',
    dockerfileAbsolutePath: 'Dockerfile 的绝对路径',
    dockerBuildArgs: '构建参数',
    jenkinsBuildArgs: '构建参数',
    artifactPath: '二进制包存储路径',
    uploadFile: '上传文件',
    variables: '构建变量',
    commonScript: '通用构建脚本',
    minute: '分钟',
    specialAdd: '+添加',
    saveBuild: '保存构建',
    updatedBy: '最后修改',
    saveAsTemplate: '保存为模板',
    timeout: '构建超时',
    preview: '预览',
    prompt: {
      select: '请选择',
      selectTemplate: '模板选择',
      selectImage: '请选择操作系统',
      packageCannotBeEmpty: '不能为空',
      variableOptions: '可选值之间用英文 “,” 隔开',
      useSystemImageNamingRules: '使用系统内置变量 $IMAGE，具体详见',
      noImageRegistry: '私有镜像仓库未集成，请前往系统设置 -> Registry 管理  进行集成。',
      dockerBuildArgs: '支持所有 Docker Build 参数',
      selectObjectStorage: '请选择对象存储',
      runShellScriptDescription: '构建运行完成后执行的 Shell 脚本',
      fillInDockerBuildWorkingDirectory: '请填写镜像构建目录',
      fillInDockerfilePath: '请填写 Dockerfile 路径',
      fillInPath: '请输入路径',
      selectInDockerfileTemplate: '请选择模板',
      selectBuildTemplate: '选择模板',
      fillInArchiveFilePath: '请填写文件路径',
      atLeastUploadOneFile: '请至少添加一个上传文件',
      uploadFilePathEmpty: '上传文件路径为空，请检查',
      buildRepoNotification: '使用模板新建时配置',
      fillInBuildName: '请输入构建名称',
      buildNameConvention: '名称只支持小写字母和数字，特殊字符只支持中划线',
      buildSaved: '保存构建成功',
      buildCreated: '新建构建成功',
      buildDeleted: '删除成功',
      saveAsTemplate: '保存为系统全局构建模板，其中的代码信息将会被去除，构建信息将会作为构建模板内容保存，请确认！',
      fillInBuildTemplateName: '请输入构建模板名称',
      templateNameIsDuplicated: '构建模板名称已存在',
      templateSaved: '保存模板成功',
      saveAsTemplateCanceled: '已取消保存',
      searchForBuild: '搜索构建',
      noExistingBuild: '暂无可展示的构建，请手动新建构建',
      deleteWithoutReference: '确定要删除 {name} 吗？',
      deleteWithReference: '该配置在 {reference} 存在引用，确定要删除 {name} 吗？',
      chooseJenkins: 'Jenkins 选择',
      buildNameCannotBeEmpty: '构建名称不能为空',
      jobsCannotBeEmpty: 'jobs不能为空',
      jenkinsBuildArgs: 'Jenkins Build Parameters 中必须存在“IMAGE”变量，作为构建镜像的名称，Jenkins 成功构建镜像后，部署阶段会使用该镜像更新服务',
      selectBuildTemplateII: '请选择构建模板'
    },
    advancedSettings: {
      title: '高级配置',
      strategy: '策略配置',
      sharedStorage: '共享存储',
      cache: '缓存配置',
      workspace: '工作空间 $WORKSPACE',
      customCacheDirectory: '自定义目录',
      directory: '路径',
      resourceConfig: '资源配置',
      cluster: '集群选择',
      selectClusterPrompt: '请选择集群名称',
      productionCluster: '生产集群',
      nonProductionCluster: '非生产集群',
      resource: '操作系统规格',
      selectResourcePrompt: '请选择操作系统',
      resourceTypeHigh: '高 | CPU: 16 核 内存: 32 GB',
      resourceTypeMedium: '中 | CPU: 8 核 内存: 16 GB',
      resourceTypeLow: '低 | CPU: 4 核 内存: 8 GB',
      resourceTypeMinimum: '最低 | CPU: 2 核 内存: 2 GB',
      resourceTypeCustom: '自定义',
      customizeCPUResource: '自定义 CPU',
      customizeMemoryResource: '自定义内存',
      customizeGPUResource: 'GPU 资源',
      memoryLabel: '内存(Mi)',
      customizeGPUTooltip: '输入 GPU 资源配置，比如 nvidia.com/gpu: 1',
      useHostDockerDaemon: '使用宿主机 Docker daemon',
      parameterPassing: '输出变量',
      parameterPassingTooltipProductWorkflow: '将脚本中的环境变量定义为输出变量，供其他任务使用',
      parameterPassingTooltipCustomWorkflow: '将脚本中的环境变量定义为输出变量，供「自定义工作流」中的其他任务使用',
      typeInVariable: '请输入变量',
      typeInCacheDirectory: '请输入绝对路径例如 $WORKSPACE/.m2',
      typeInCustomCPUResource: '请输入自定义 CPU',
      typeInCustomMemoryResource: '输入自定义内存',
      typeInCustomGPUResource: '请输入 GPU 资源配置',
      typeInCorrectNumber: '请输入正确数字',
      paramaterNamingConvention: '变量名称仅支持英文字母、数字、下划线且首个字符不以数字开头'
    }
  },
  systemVariables: {
    encrypted: '',
    workspace: '工作目录',
    project: '项目标识',
    workflowTaskID: '工作流任务 ID',
    image: '输出镜像名称',
    updateImageNamingRulesPrompt: '更新镜像命名规则',
    artifact: '构建出的 Tar 包名称',
    updateArtifactNamingRulesPrompt: '更新 Tar 包命名规则',
    service: '构建的服务名称',
    serviceModule: '构建的服务组件名称',
    artifactPath: '构建出的 Tar 包的目的目录',
    buildEnvName: '执行的环境名称',
    buildTaskLink: '构建任务的 URL',
    ci: '值恒等于 true，表示当前环境是 CI/CD 环境',
    // eslint-disable-next-line no-template-curly-in-string
    repoIndex: '指定 <index> 的代码库名称（可用于代码信息相关变量名，仓库名称中的中划线 "-" 替换成下划线"_"），其中 <index> 为构建配置中代码库的位置，初始值为 0',
    // eslint-disable-next-line no-template-curly-in-string
    repoNameIndex: '指定 <index> 的代码库名称，其中 <index> 为构建配置中代码库的位置，初始值为 0',
    // eslint-disable-next-line no-template-curly-in-string
    repoPR: '构建时使用的代码 Pull Request 信息，其中 <REPO> 是具体的代码仓库名称，使用时可以填写仓库名称或者结合 $REPO_<index> 变量使用，比如可以通过 eval PR=\${${REPO_0}_PR} 方式获取第一个代码库的 Pull Request 信息，如选择多个 PR，变量值形如 1,2,3',
    // eslint-disable-next-line no-template-curly-in-string
    repoBranch: '构建时使用的代码分支信息，其中 <REPO> 是具体的代码仓库名称，使用时可以填写仓库名称或者结合 $REPO_index 变量使用，比如可以通过 eval BRANCH=\\${${REPO_0}_BRANCH} 方式获取第一个代码库的分支信息',
    // eslint-disable-next-line no-template-curly-in-string
    repoTag: '构建时使用代码 Tag 信息，其中 <REPO> 是具体的代码仓库名称，使用时可以填写仓库名称或者结合 $REPO_index 变量使用，比如可以通过 eval TAG=\\${${REPO_0}_TAG} 方式获取第一个代码库的分支信息',
    // eslint-disable-next-line no-template-curly-in-string
    repoCommitID: '构建时使用代码 Commit 信息，其中 <REPO> 是具体的代码仓库名称，使用时可以填写仓库名称或者结合 $REPO_index 变量使用，比如可以通过 eval COMMITID=\\${${REPO_0}_COMMIT_ID} 方式获取第一个代码库的 COMMIT 信息',
    // eslint-disable-next-line no-template-curly-in-string
    repoOrg: '构建时使用的代码组织/用户信息，其中 <REPO> 是具体的代码仓库名称，使用时可以填写仓库名称或者结合 $REPO_index 变量使用，比如可以通过 eval org=\${${REPO_0}_ORG} 方式获取第一个代码库的分支信息',
    // eslint-disable-next-line no-template-curly-in-string
    otherTypeRepoWarning: '如使用 其他 代码源，$<REPO>_PR 和 $<REPO>_COMMIT_ID 变量不支持',
    linkedEnv: '被测命名空间',
    testEnvName: '被测环境名称',
    testTaskLink: '测试任务的 URL',
    // eslint-disable-next-line no-template-curly-in-string
    testServices: '通过工作流任务更新的服务组，服务名以 “,” 分隔，形如 service1,service2,service3。推荐使用 array=(${SERVICES//,/ } 方式转化成数组',
    zadig: '值恒等于 true，表示在 ZADIG 系统上执行脚本',
    preWorkspace: '工作目录，可用于前置脚本中',
    branch: '第一个代码库的分支信息，可用于参数配置中'
  },
  timeFormate: {
    seconds: '秒',
    minutes: '分'
  },
  dashboard: {
    addCard: '添加卡片',
    noCard: '暂无卡片',
    my_workflow: '我的工作流',
    my_env: '我的环境',
    running_workflow: '运行中的工作流',
    runningTip: '显示系统中运行中的工作流列表',
    myWorkflowTip: '显示个人关注的工作流列表',
    myEnvTip: '显示个人关注的环境及服务信息',
    delSuccess: '删除成功',
    confirmDelCard: '确定删除 {name} 卡片吗'
  }
}
